name: Bundle and Release

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  BUNDLE_NAME: izms

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Bundle scripts
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.8]

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
    - name: Bundle with PyInstaller
      run: |
        PATHSEP=$(python -c "import os; print(os.pathsep)")
        pyinstaller --onefile --add-data "README.md${PATHSEP}$README.md" --name "${{ env.BUNDLE_NAME }}" run.py
        cp config.json README.md dist/
    - name: Archive build
      id: archive
      run: |
        PKG_NAME=$(python -c "import sys; from run import __title__, __version__; print(f'{__title__}-v{__version__}-{sys.platform}')")
        ARCHIVE="${PKG_NAME}.zip"
        echo "::set-output name=filename::$ARCHIVE"
        mv dist "$PKG_NAME"
        zip -r "$ARCHIVE" "$PKG_NAME"
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: archives
        path: ${{ steps.archive.outputs.filename }}
# release:
#     - name: Release
#       uses: softprops/action-gh-release@v1
#       if: startsWith(github.ref, 'refs/tags/')
#       with:
#         files: ${{ steps.archive.outputs.filename }}
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  